workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "onyx",
    # Map the @npm bazel workspace to the node_modules directory. This lets Bazel use the same node_modules as other local tooling.
    managed_directories = {"@npm": ["node_modules"]},
)

load("//tools:deps.bzl", "fetch_build_bazel_rules_nodejs")
fetch_build_bazel_rules_nodejs()

load("@build_bazel_rules_nodejs//:repositories.bzl", "build_bazel_rules_nodejs_dependencies")

build_bazel_rules_nodejs_dependencies()

# The yarn_install rule runs yarn anytime the package.json or yarn.lock file changes.
# It also extracts any Bazel rules distributed in an npm package.
load("@build_bazel_rules_nodejs//:index.bzl", "node_repositories", "yarn_install")

node_repositories(package_json = ["//:package.json"])

yarn_install(
    name = "npm",  # Name this "npm" so that Bazel Label references look like @npm//package
    package_json = "//:package.json",
    yarn_lock = "//:yarn.lock",
    symlink_node_modules = True,
)
